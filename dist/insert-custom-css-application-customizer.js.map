{"version":3,"sources":["webpack:///../webpack/bootstrap","webpack:///../external \"@microsoft/sp-application-base\"","webpack:///../external \"@microsoft/sp-core-library\"","webpack:///../external \"InsertCustomCssApplicationCustomizerStrings\"","webpack:///.././src/extensions/insertCustomCss/InsertCustomCssApplicationCustomizer.ts"],"names":[],"mappings":";QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;;AClFA,kD;;;;;;;;;;;;ACAA,kD;;;;;;;;;;;;ACAA,kD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAiD;AAC0B;AAEJ;AAEvE,IAAM,UAAU,GAAW,sCAAsC,CAAC;AAWlE,qFAAqF;AACrF;IACU,wDAA0E;IADpF;;IAiBA,CAAC;IAdQ,qDAAM,GAAb;QACE,8DAAG,CAAC,IAAI,CAAC,UAAU,EAAE,sBAAe,iFAAa,CAAE,CAAC,CAAC;QAErD,IAAI,MAAM,GAAY,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,UAAU,CAAC,YAAY,GAAG,KAAK,GAAG,CAAC,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,kBAAkB;QAEnJ,IAAM,OAAO,GAAQ,QAAQ,CAAC,oBAAoB,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,QAAQ,CAAC,eAAe,CAAC;QAC1F,IAAI,WAAW,GAAoB,QAAQ,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;QAClE,WAAW,CAAC,IAAI,GAAG,MAAM,CAAC;QAC1B,WAAW,CAAC,GAAG,GAAG,YAAY,CAAC;QAC/B,WAAW,CAAC,IAAI,GAAG,UAAU,CAAC;QAC9B,OAAO,CAAC,qBAAqB,CAAC,WAAW,EAAE,WAAW,CAAC,CAAC;QAExD,OAAO,OAAO,CAAC,OAAO,EAAE,CAAC;IAC3B,CAAC;IACH,2CAAC;AAAD,CAAC,CAhBS,wFAAyB,GAgBlC","file":"insert-custom-css-application-customizer.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"ft/t\");\n","module.exports = __WEBPACK_EXTERNAL_MODULE_GPet__;","module.exports = __WEBPACK_EXTERNAL_MODULE_UWqr__;","module.exports = __WEBPACK_EXTERNAL_MODULE_b5Tc__;","import { Log } from '@microsoft/sp-core-library';\nimport { BaseApplicationCustomizer } from '@microsoft/sp-application-base';\n\nimport * as strings from 'InsertCustomCssApplicationCustomizerStrings';\n\nconst LOG_SOURCE: string = 'InsertCustomCssApplicationCustomizer';\n\n/**\n * If your command set uses the ClientSideComponentProperties JSON input,\n * it will be deserialized into the BaseExtension.properties object.\n * You can define an interface to describe it.\n */\nexport interface IInsertCustomCssApplicationCustomizerProperties {\n    urlCustomCss: string;\n}\n\n/** A Custom Action which can be run during execution of a Client Side Application */\nexport default class InsertCustomCssApplicationCustomizer\n  extends BaseApplicationCustomizer<IInsertCustomCssApplicationCustomizerProperties> {\n\n  public onInit(): Promise<void> {\n    Log.info(LOG_SOURCE, `Initialized ${strings.Title}`);\n\n    let cssUrl : string = this.context.pageContext.site.absoluteUrl + this.properties.urlCustomCss + \"?v=\" + (new Date().getTime()); // prevent caching\n    \n    const headDOM: any = document.getElementsByTagName(\"head\")[0] || document.documentElement;\n    let customStyle: HTMLLinkElement = document.createElement(\"link\");\n    customStyle.href = cssUrl;\n    customStyle.rel = \"stylesheet\";\n    customStyle.type = \"text/css\";\n    headDOM.insertAdjacentElement(\"beforeEnd\", customStyle);\n\n    return Promise.resolve();\n  }\n}\n"],"sourceRoot":""}